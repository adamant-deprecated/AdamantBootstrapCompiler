//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AdamantParser.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Adamant.Compiler.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAdamantParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class AdamantParserBaseListener : IAdamantParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] AdamantParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] AdamantParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStatement([NotNull] AdamantParser.UsingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStatement([NotNull] AdamantParser.UsingStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] AdamantParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] AdamantParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.namespaceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceName([NotNull] AdamantParser.NamespaceNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.namespaceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceName([NotNull] AdamantParser.NamespaceNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NamespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDeclaration([NotNull] AdamantParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NamespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDeclaration([NotNull] AdamantParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ClassDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] AdamantParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ClassDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] AdamantParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.GlobalDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalDeclaration([NotNull] AdamantParser.GlobalDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.GlobalDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalDeclaration([NotNull] AdamantParser.GlobalDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.FunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] AdamantParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.FunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] AdamantParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] AdamantParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] AdamantParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.baseTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseTypes([NotNull] AdamantParser.BaseTypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.baseTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseTypes([NotNull] AdamantParser.BaseTypesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModifier([NotNull] AdamantParser.ModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModifier([NotNull] AdamantParser.ModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterList([NotNull] AdamantParser.TypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterList([NotNull] AdamantParser.TypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.typeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameter([NotNull] AdamantParser.TypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.typeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameter([NotNull] AdamantParser.TypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] AdamantParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] AdamantParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.typeArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeArguments([NotNull] AdamantParser.TypeArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.typeArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeArguments([NotNull] AdamantParser.TypeArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.MutableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutableType([NotNull] AdamantParser.MutableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.MutableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutableType([NotNull] AdamantParser.MutableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.OwnedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOwnedType([NotNull] AdamantParser.OwnedTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.OwnedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOwnedType([NotNull] AdamantParser.OwnedTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ImmutableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImmutableType([NotNull] AdamantParser.ImmutableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ImmutableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImmutableType([NotNull] AdamantParser.ImmutableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ImplicitType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitType([NotNull] AdamantParser.ImplicitTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ImplicitType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitType([NotNull] AdamantParser.ImplicitTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ArrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] AdamantParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ArrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] AdamantParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ArraySliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArraySliceType([NotNull] AdamantParser.ArraySliceTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ArraySliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArraySliceType([NotNull] AdamantParser.ArraySliceTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NamedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedType([NotNull] AdamantParser.NamedTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NamedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedType([NotNull] AdamantParser.NamedTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.FunctionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] AdamantParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.FunctionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] AdamantParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.PointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] AdamantParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.PointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] AdamantParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.funcTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncTypeParameterList([NotNull] AdamantParser.FuncTypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.funcTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncTypeParameterList([NotNull] AdamantParser.FuncTypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.funcTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncTypeParameter([NotNull] AdamantParser.FuncTypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.funcTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncTypeParameter([NotNull] AdamantParser.FuncTypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.constExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstExpression([NotNull] AdamantParser.ConstExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.constExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstExpression([NotNull] AdamantParser.ConstExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.typeParameterConstraintClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterConstraintClause([NotNull] AdamantParser.TypeParameterConstraintClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.typeParameterConstraintClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterConstraintClause([NotNull] AdamantParser.TypeParameterConstraintClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ConstructorConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorConstraint([NotNull] AdamantParser.ConstructorConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ConstructorConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorConstraint([NotNull] AdamantParser.ConstructorConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.TypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeConstraint([NotNull] AdamantParser.TypeConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.TypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeConstraint([NotNull] AdamantParser.TypeConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.TypeListParameterConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeListParameterConstraint([NotNull] AdamantParser.TypeListParameterConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.TypeListParameterConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeListParameterConstraint([NotNull] AdamantParser.TypeListParameterConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor([NotNull] AdamantParser.ConstructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor([NotNull] AdamantParser.ConstructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Destructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestructor([NotNull] AdamantParser.DestructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Destructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestructor([NotNull] AdamantParser.DestructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ConversionMethod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversionMethod([NotNull] AdamantParser.ConversionMethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ConversionMethod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversionMethod([NotNull] AdamantParser.ConversionMethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.OperatorOverloadMethod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorOverloadMethod([NotNull] AdamantParser.OperatorOverloadMethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.OperatorOverloadMethod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorOverloadMethod([NotNull] AdamantParser.OperatorOverloadMethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField([NotNull] AdamantParser.FieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField([NotNull] AdamantParser.FieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] AdamantParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] AdamantParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] AdamantParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] AdamantParser.MethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] AdamantParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] AdamantParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] AdamantParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] AdamantParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.parameterModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterModifier([NotNull] AdamantParser.ParameterModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.parameterModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterModifier([NotNull] AdamantParser.ParameterModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.constructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorInitializer([NotNull] AdamantParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.constructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorInitializer([NotNull] AdamantParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] AdamantParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] AdamantParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] AdamantParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] AdamantParser.MethodBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.overloadableOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOverloadableOperator([NotNull] AdamantParser.OverloadableOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.overloadableOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOverloadableOperator([NotNull] AdamantParser.OverloadableOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.VariableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationStatement([NotNull] AdamantParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.VariableDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationStatement([NotNull] AdamantParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.UnsafeBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeBlockStatement([NotNull] AdamantParser.UnsafeBlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.UnsafeBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeBlockStatement([NotNull] AdamantParser.UnsafeBlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.Block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] AdamantParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.Block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] AdamantParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.EmptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] AdamantParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.EmptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] AdamantParser.EmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ExpressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] AdamantParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ExpressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] AdamantParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ReturnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] AdamantParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ReturnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] AdamantParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ThrowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] AdamantParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ThrowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] AdamantParser.ThrowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.IfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] AdamantParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.IfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] AdamantParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ForStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] AdamantParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ForStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] AdamantParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ForeachStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStatement([NotNull] AdamantParser.ForeachStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ForeachStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStatement([NotNull] AdamantParser.ForeachStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.DeleteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeleteStatement([NotNull] AdamantParser.DeleteStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.DeleteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeleteStatement([NotNull] AdamantParser.DeleteStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] AdamantParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] AdamantParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NullCheckExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullCheckExpression([NotNull] AdamantParser.NullCheckExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NullCheckExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullCheckExpression([NotNull] AdamantParser.NullCheckExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.StringLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteralExpression([NotNull] AdamantParser.StringLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.StringLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteralExpression([NotNull] AdamantParser.StringLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.XorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXorExpression([NotNull] AdamantParser.XorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.XorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXorExpression([NotNull] AdamantParser.XorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.UnaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] AdamantParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.UnaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] AdamantParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.OrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpression([NotNull] AdamantParser.OrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.OrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpression([NotNull] AdamantParser.OrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.IntLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntLiteralExpression([NotNull] AdamantParser.IntLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.IntLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntLiteralExpression([NotNull] AdamantParser.IntLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NewObjectExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewObjectExpression([NotNull] AdamantParser.NewObjectExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NewObjectExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewObjectExpression([NotNull] AdamantParser.NewObjectExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ThisExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisExpression([NotNull] AdamantParser.ThisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ThisExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisExpression([NotNull] AdamantParser.ThisExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.AndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] AdamantParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.AndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] AdamantParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.AssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] AdamantParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.AssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] AdamantParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.BooleanLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteralExpression([NotNull] AdamantParser.BooleanLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.BooleanLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteralExpression([NotNull] AdamantParser.BooleanLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.EqualityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] AdamantParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.EqualityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] AdamantParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.MultiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] AdamantParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.MultiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] AdamantParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.CallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallExpression([NotNull] AdamantParser.CallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.CallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallExpression([NotNull] AdamantParser.CallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NullLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullLiteralExpression([NotNull] AdamantParser.NullLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NullLiteralExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullLiteralExpression([NotNull] AdamantParser.NullLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.AdditiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] AdamantParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.AdditiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] AdamantParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.IfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpression([NotNull] AdamantParser.IfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.IfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpression([NotNull] AdamantParser.IfExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.PointerMemberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerMemberExpression([NotNull] AdamantParser.PointerMemberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.PointerMemberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerMemberExpression([NotNull] AdamantParser.PointerMemberExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.NewExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewExpression([NotNull] AdamantParser.NewExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.NewExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewExpression([NotNull] AdamantParser.NewExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.UninitializedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUninitializedExpression([NotNull] AdamantParser.UninitializedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.UninitializedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUninitializedExpression([NotNull] AdamantParser.UninitializedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.VariableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableExpression([NotNull] AdamantParser.VariableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.VariableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableExpression([NotNull] AdamantParser.VariableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpression([NotNull] AdamantParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpression([NotNull] AdamantParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.MemberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberExpression([NotNull] AdamantParser.MemberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.MemberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberExpression([NotNull] AdamantParser.MemberExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ComparativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparativeExpression([NotNull] AdamantParser.ComparativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ComparativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparativeExpression([NotNull] AdamantParser.ComparativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.CoalesceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCoalesceExpression([NotNull] AdamantParser.CoalesceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.CoalesceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCoalesceExpression([NotNull] AdamantParser.CoalesceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.ArrayAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccessExpression([NotNull] AdamantParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.ArrayAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccessExpression([NotNull] AdamantParser.ArrayAccessExpressionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Adamant.Compiler.Antlr
