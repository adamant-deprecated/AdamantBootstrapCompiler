//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\data\projects\adamant-lang\Adamant.Compiler\Compiler\Antlr\Adamant.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Adamant.Compiler.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAdamantListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class AdamantBaseListener : IAdamantListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] AdamantParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] AdamantParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStatement([NotNull] AdamantParser.UsingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStatement([NotNull] AdamantParser.UsingStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.namespaceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceName([NotNull] AdamantParser.NamespaceNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.namespaceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceName([NotNull] AdamantParser.NamespaceNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.namespaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceMemberDeclaration([NotNull] AdamantParser.NamespaceMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.namespaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceMemberDeclaration([NotNull] AdamantParser.NamespaceMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AdamantParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDeclaration([NotNull] AdamantParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AdamantParser.namespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDeclaration([NotNull] AdamantParser.NamespaceDeclarationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Adamant.Compiler.Antlr
